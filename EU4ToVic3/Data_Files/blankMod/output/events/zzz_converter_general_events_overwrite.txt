namespace = 1848
namespace = commander_events
namespace = communism
namespace = crime_events
namespace = german_unification

# Monarchism Stamped Out
1848.2 = {
	type = country_event
	placement = root
	title = 1848.2.t
	desc = 1848.2.d
	flavor = 1848.2.f

	duration = 3

	event_image = {
		video = "europenorthamerica_london_center"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/waving_flag.dds"

	trigger = {
		# triggered by je_abolish_monarchy
	}

	option = {
		name = 1848.2.a
		default_option = yes
		ig:ig_landowners = {
			remove_ideology = ideology_paternalistic
			remove_ideology = ideology_scholar_paternalistic
			remove_ideology = ideology_junker_paternalistic
			remove_ideology = ideology_papal_paternalistic
			remove_ideology = ideology_maternalistic		### Converter
			add_ideology = ideology_republican_paternalistic
		}
		custom_tooltip = {
			text = no_more_royalists
			set_variable = monarchy_stamped_out_var
		}
		every_interest_group = {
			limit = {
				leader = {
					has_monarchist_ideology = yes
				}
			}
			leader = {
				set_ideology = ideology:ideology_moderate
			}
		}
	}
	option = {
		name = 1848.2.b
		# don't do that, just make landowners lose power
		ig:ig_landowners = {
			add_modifier = {
				name = monarchist_nostalgia
				months = normal_modifier_time
			}
		}
	}
}

# Psychological Warfare
# in loving memory of Matthew J. Clohessy, now living a better life as a programmer, may his content not be forgotten

commander_events.6 = {
	type = country_event
    placement = ROOT

    title = commander_events.6.t
    desc = commander_events.6.d
    flavor = commander_events.6.f

    event_image = {
		video = "europenorthamerica_before_the_battle"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_military.dds"

    duration = 3

	trigger = {
		NOT = { has_variable = psychological_warfare_var }
		any_scope_character = {
			is_busy = no
			has_role = general
			OR = {
				has_trait = romantic
				has_trait = arrogant
				has_trait = bigoted
				has_trait = reckless
				has_trait = ambitious
				has_trait = imperious
				has_trait = charismatic
				has_trait = hedonist
				has_trait = persistent
			}
			NOR = {
				has_trait = meticulous
				has_trait = cautious
				has_trait = pious
			}
		}
		any_interest_group = {
			is_marginal = no
			leader = {
				NOT = { has_trait = syphilis }
				is_oppressed_gender = no		### Converter
			}
		}
	}

	immediate = {
		set_variable = psychological_warfare_var
		random_scope_character = {
			limit = {
				has_role = general
				is_busy = no
				OR = {
					has_trait = romantic
					has_trait = arrogant
					has_trait = bigoted
					has_trait = reckless
					has_trait = ambitious
					has_trait = imperious
					has_trait = charismatic
					has_trait = hedonist
					has_trait = persistent
				}
				NOR = {
					has_trait = meticulous
					has_trait = cautious
					has_trait = pious
				}
			}
			set_variable = seducer_commander_var
			save_scope_as = seducer_commander
		}
		random_interest_group = {
			limit = {
				is_marginal = no
				leader = {
					NOT = { 
						has_trait = syphilis
						has_variable = seducer_commander_var
					}
					is_oppressed_gender = no		### Converter
				}
			}
			save_scope_as = cheated_ig
			leader = {
				save_scope_as = cheated_leader
			}
		}
	}

	cancellation_trigger = {
		NOR = {
			exists = scope:seducer_commander
			exists = scope:cheated_leader
			scope:cheated_ig = { is_marginal = yes }
		}
	}

	option = { #cover the general
		name = commander_events.6.a
		default_option = yes
		custom_tooltip = commander_events.6.a.tt
		scope:cheated_leader = {
			add_trait = syphilis
			if = {
				limit = {
					NOT = { has_trait = alcoholic }
				}
				random_list = {
					10 = { add_trait = alcoholic }
					90 = { }
				}
			}
		}
		scope:seducer_commander = {
			if = {
				limit = { NOT = { has_trait = syphilis } }
				add_trait = syphilis
			}
			remove_variable = seducer_commander_var
		}
		scope:cheated_ig = {
			add_modifier = {
				name = covered_affair_modifier #disapprove
				months = normal_modifier_time
			}
		}
	}

	option = { #bruh
		name = commander_events.6.b
		custom_tooltip = commander_events.6.b.tt
		hidden_effect = {
			scope:seducer_commander = {
				kill_character = yes
				remove_variable = seducer_commander_var
			}		
		}
		scope:cheated_leader = {
			add_trait = syphilis
		}
		scope:cheated_ig = {
			add_modifier = {
				name = punished_commander_modifier #approve
				months = normal_modifier_time
			}
		}
	}
	
	option = { #let them fight
		name = commander_events.6.c
		trigger = { #if the leader has a reckless trait he punches the other guy
			scope:cheated_leader = {
				has_trait = reckless
			}
		}
		scope:cheated_leader = {
			add_trait = syphilis
			add_modifier = {
				name = punching_leader_modifier #popularity
				months = normal_modifier_time
			}
		}
		scope:seducer_commander = {
			add_modifier = {
				name = punched_commander_modifier #popularity bad
				months = normal_modifier_time
			}
			remove_variable = seducer_commander_var
			if = {
				limit = { NOT = { has_trait = syphilis } }
				add_trait = syphilis
			}
		}
	}
}

# The Red Army
communism.8 = {
	type = country_event
	placement = root
	title = communism.8.t
	desc = communism.8.d
	flavor = communism.8.f

	duration = 3

	icon = "gfx/interface/icons/event_icons/event_military.dds"

	event_image = {
		video = "unspecific_military_parade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	trigger = {
		has_law = law_type:law_council_republic
		NOT = {	has_variable = red_army_var }
		ig:ig_armed_forces = {
			leader = {
				OR = {
					has_ideology = ideology:ideology_communist
					has_ideology = ideology:ideology_vanguardist
				}
			}
		}
	}

	immediate = {
		ig:ig_armed_forces = {
			save_scope_as = red_army_ig
			leader = {
				save_scope_as = red_army_general
			}
		}
		set_variable = red_army_var
	}

	option = {
		name = communism.8.a
		ig:ig_armed_forces = {
			custom_tooltip = red_army_tt
			hidden_effect = {
				set_interest_group_name = ig_red_army
			}
			remove_ideology = ideology_loyalist
			### Converter
			if = {
				limit = { has_ideology = ideology:ideology_individualist }
				remove_ideology = ideology_individualist
				add_ideology = ideology_patriotic
			}
			### Converter
			add_ideology = ideology_proletarian
		}
	}
}

crime_events.11 = { #The Criminal was caught
	type = country_event
	placement = scope:serial_killer_state_scope

	title = crime_events.11.t
	desc = {
		first_valid = {
			triggered_desc = {
				desc = crime_events.11.d
				trigger = {
					NOT = { has_variable = important_killer_var }
				}
			}
			triggered_desc = {
				desc = crime_events.11.d2
				trigger = {
					has_variable = important_killer_var
				}
			}
		}
	}
	flavor = crime_events.11.f

	event_image = {
		video = "middleeast_police_breaking_door"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	duration = 3

	trigger = {
		# triggered by je_serial_killer pulse
		any_scope_character = {
			is_ruler = no
			is_oppressed_gender = no		### Converter
			interest_group = {
				is_marginal = no
			}
			age > 18
		}
	}

	immediate = {
		random_scope_character = {
			limit = {
				is_ruler = no
				is_oppressed_gender = no		### Converter
				interest_group = {
					is_marginal = no
				}
				age > 18
			}
			save_scope_as = important_killer
		}
		random_list = {
			80 = { }
			20 = {
				set_variable = important_killer_var
			}
		}
		random_scope_state = {
			limit = {
				has_modifier = serial_killer_state_mod
			}
			save_scope_as = serial_killer_state_scope
		}
		set_variable = serial_killer_caught
	}

	option = {
		name = crime_events.11.a
		default_option = yes
		add_modifier = {
			name = modifier_killer_caught
			months = normal_modifier_time
		}
		if = {
			limit = {
				has_variable = important_killer_var
			}
			scope:important_killer = {
				kill_character = yes
				interest_group = {
					add_modifier = {
						name = serial_killer_ig
						months = normal_modifier_time
					}
				}
			}
		}
	}

	option = { # cover up the identity of the killer
		name = crime_events.11.b
		trigger = {
			has_variable = important_killer_var
		}
		set_variable = serial_killer_caught
		if = {
			limit = {
				has_law = law_type:law_outlawed_dissent
			}
			scope:important_killer = { # small popularity hit
				add_modifier = {
					name = suspected_serial_killer
				}
			}
		}
		else_if = {
			limit = {
				has_law = law_type:law_censorship
			}
			scope:important_killer = { # moderate popularity hit
				add_modifier = {
					name = suspected_serial_killer
					multiplier = 2
				}
			}
		}
		else = {
			scope:important_killer = { # major popularity hit
				add_modifier = {
					name = suspected_serial_killer
					multiplier = 3
				}
			}
		}
	}	
}

# Bismarck
german_unification.3 = {
	type = country_event
	placement = ROOT

	title = german_unification.3.t
	desc = german_unification.3.d
	flavor = german_unification.3.f

	gui_window = event_window_1char_tabloid

	left_icon = scope:bismarck_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	duration = 3

	trigger = {
		NOT = { has_global_variable = bismarck_variable }
		ig:ig_landowners = {
			is_powerful = yes
			is_in_government = yes
		}
		is_unification_candidate = GER
		has_technology_researched = nationalism
		game_date > 1846.1.1
		game_date < 1898.1.1
	}

	immediate = {
		set_global_variable = bismarck_variable
		### Converter ###
		if = {
			limit = { is_matriarchal_country = yes }
			create_character = {
				first_name = Uta
				last_name = von_Bismarck
				historical = yes
				ig_leader = yes
				interest_group = ig_landowners
				female = yes
				birth_date = 1815.4.1
				dna = dna_otto_von_bismarck
				ideology = ideology_royalist
				traits = {
					direct
					cautious
				}
			}
		}
		else = {
			create_character = {
				first_name = Otto
				last_name = von_Bismarck
				historical = yes
				ig_leader = yes
				interest_group = ig_landowners
				female = no
				birth_date = 1815.4.1
				dna = dna_otto_von_bismarck
				ideology = ideology_royalist
				traits = {
					direct
					cautious
				}
			}
		}
		### Converter ###
		ig:ig_landowners = {
			save_scope_as = junkers
			leader = {
				save_scope_as = bismarck_scope
			}
		}
	}

	option = {
		name = german_unification.3.a
		default_option = yes
		show_as_tooltip = {
			create_character = {
				first_name = Otto
				last_name = von_Bismarck
				historical = yes
				ig_leader = yes
				interest_group = ig_landowners
				female = no
				birth_date = 1815.4.1
				ideology = ideology_royalist
				traits = {
					direct
					cautious
				}
			}
		}
		scope:bismarck_scope = {
			add_modifier = {
				name = bismarck_popular
			}
		}
		add_modifier = {
			name = realpolitik
			months = normal_modifier_time
		}
	}
	option = {
		name = german_unification.3.b
		default_option = yes
		show_as_tooltip = {
			create_character = {
				first_name = Otto
				last_name = von_Bismarck
				historical = yes
				ig_leader = yes
				interest_group = ig_landowners
				female = no
				birth_date = 1815.4.1
				ideology = ideology_royalist
				traits = {
					direct
					cautious
				}
			}
		}
		scope:bismarck_scope = {
			add_modifier = {
				name = bismarck_unpopular
			}
		}
		add_modifier = {
			name = germany_aggressive_expansion
			months = normal_modifier_time
		}
	}
}